{
  "contractName": "DetherInterface",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "initialised",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_avatarId",
          "type": "int8"
        },
        {
          "name": "_currencyId",
          "type": "int8"
        },
        {
          "name": "_messagingAddr",
          "type": "bytes32"
        },
        {
          "name": "_messagingAddr2",
          "type": "bytes32"
        },
        {
          "name": "_rates",
          "type": "int16"
        }
      ],
      "name": "updateProfilePayable",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_teller",
          "type": "address"
        }
      ],
      "name": "getTellerStatus",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        },
        {
          "name": "status",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "switchTellerOffline",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tellerStorage",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deleteMyProfile",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_teller",
          "type": "address"
        }
      ],
      "name": "getTellerProfile",
      "outputs": [
        {
          "name": "avatarId",
          "type": "int8"
        },
        {
          "name": "currencyId",
          "type": "int8"
        },
        {
          "name": "messagingAddr",
          "type": "bytes32"
        },
        {
          "name": "messagingAddr2",
          "type": "bytes32"
        },
        {
          "name": "rate",
          "type": "int16"
        },
        {
          "name": "volumeSell",
          "type": "uint256"
        },
        {
          "name": "volumeBuy",
          "type": "uint256"
        },
        {
          "name": "nbTrade",
          "type": "uint256"
        },
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_lat",
          "type": "uint256"
        },
        {
          "name": "_lng",
          "type": "uint256"
        },
        {
          "name": "_countryCode",
          "type": "bytes32"
        },
        {
          "name": "_postalcode",
          "type": "int32"
        },
        {
          "name": "_avatarId",
          "type": "int8"
        },
        {
          "name": "_currencyId",
          "type": "int8"
        },
        {
          "name": "_messagingAddress",
          "type": "bytes32"
        },
        {
          "name": "_messagingAddress2",
          "type": "bytes32"
        },
        {
          "name": "_rates",
          "type": "int16"
        }
      ],
      "name": "registerTeller",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_teller",
          "type": "address"
        }
      ],
      "name": "isTellerOnline",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "limit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "addBalance",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_lat",
          "type": "uint256"
        },
        {
          "name": "_lng",
          "type": "uint256"
        },
        {
          "name": "_countryCode",
          "type": "bytes32"
        },
        {
          "name": "_postalcode",
          "type": "int32"
        }
      ],
      "name": "updatePosition",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_teller",
          "type": "address"
        }
      ],
      "name": "isRegistered",
      "outputs": [
        {
          "name": "status",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getTellerBalances",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setInit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_lat",
          "type": "uint256"
        },
        {
          "name": "_lng",
          "type": "uint256"
        },
        {
          "name": "_countryCode",
          "type": "bytes32"
        },
        {
          "name": "_postalcode",
          "type": "int32"
        }
      ],
      "name": "updatePositionPayable",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_teller",
          "type": "address"
        }
      ],
      "name": "getTellerPos",
      "outputs": [
        {
          "name": "_lat",
          "type": "uint256"
        },
        {
          "name": "_lng",
          "type": "uint256"
        },
        {
          "name": "_countryId",
          "type": "bytes32"
        },
        {
          "name": "postalCode",
          "type": "int32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_avatarId",
          "type": "int8"
        },
        {
          "name": "_currencyId",
          "type": "int8"
        },
        {
          "name": "_messagingAddr",
          "type": "bytes32"
        },
        {
          "name": "_messagingAddr2",
          "type": "bytes32"
        },
        {
          "name": "_rates",
          "type": "int16"
        }
      ],
      "name": "updateProfile",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newLimit",
          "type": "uint256"
        }
      ],
      "name": "updateLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "changeStorageOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_tellerStorageAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "tellerAddress",
          "type": "address"
        }
      ],
      "name": "RegisterTeller",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "tellerAddress",
          "type": "address"
        }
      ],
      "name": "DeleteTeller",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "tellerAddress",
          "type": "address"
        }
      ],
      "name": "UpdateTeller",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Send",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "bytecode": "0x6060604052671bc16d674ec8000060025534156200001c57600080fd5b604051602080620025ab83398101604052620000429067800000000000000090620000fb565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600060146101000a81548160ff0219169083151502179055505062000151565b6000620000f3825162000131565b905092915050565b600060208284031260018114620001125762000117565b600080fd5b5060006200012884828501620000e5565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61244a80620001616000396000f300606060405260043610610128576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806307003bb41461012d578063146c2044146101565780632452b4721461016d578063418596da146101a457806343cb265e146101b957806343f3db45146101e25780634d9054d4146101f7578063699eaa3b146102355780638da5cb5b1461024c5780639d94558a14610275578063a4d66daf146102ab578063b163cc38146102d4578063b384aa4c146102de578063c3c5a54714610300578063cb9fc26b14610336578063d94b9b371461036c578063ef8b617614610381578063f07afb9e14610398578063f2fde38b146103d1578063fa6ac10f146103f3578063fae0959a14610415578063fe10fa3114610437575b600080fd5b341561013857600080fd5b610140610459565b60405161014d91906121f0565b60405180910390f35b61016b6004610166903690611e93565b61046c565b005b341561017857600080fd5b61018d6004610188903690611e61565b6106d0565b60405161019b9291906122ce565b60405180910390f35b34156101af57600080fd5b6101b7610795565b005b34156101c457600080fd5b6101cc61088f565b6040516101d9919061220b565b60405180910390f35b34156101ed57600080fd5b6101f56108b5565b005b341561020257600080fd5b6102176004610212903690611e61565b61099e565b60405161022c99989796959493929190612226565b60405180910390f35b61024a6004610245903690611fb1565b610c36565b005b341561025757600080fd5b61025f611027565b60405161026c91906120f8565b60405180910390f35b341561028057600080fd5b6102956004610290903690611e61565b61104c565b6040516102a291906121f0565b60405180910390f35b34156102b657600080fd5b6102be611109565b6040516102cb91906122b3565b60405180910390f35b6102dc61110f565b005b34156102e957600080fd5b6102fe60046102f9903690611f45565b6112c0565b005b341561030b57600080fd5b610320600461031b903690611e61565b61147b565b60405161032d91906121f0565b60405180910390f35b341561034157600080fd5b6103566004610351903690611e61565b61153b565b60405161036391906122b3565b60405180910390f35b341561037757600080fd5b61037f6115f8565b005b6103966004610391903690611f45565b611615565b005b34156103a357600080fd5b6103b860046103b3903690611e61565b611876565b6040516103c894939291906122f7565b60405180910390f35b34156103dc57600080fd5b6103f160046103ec903690611e61565b611951565b005b34156103fe57600080fd5b610413600461040e903690611e93565b611aa6565b005b341561042057600080fd5b6104356004610430903690611f13565b611c64565b005b341561044257600080fd5b6104576004610452903690611e61565b611cc9565b005b600060149054906101000a900460ff1681565b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303e69146336000604051602001526040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016104f091906120f8565b602060405180830381600087803b151561050957600080fd5b6102c65a03f1151561051a57600080fd5b50505060405180519050151514151561053257600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663403bfbad3387878787876040518763ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016105b396959493929190612113565b600060405180830381600087803b15156105cc57600080fd5b6102c65a03f115156105dd57600080fd5b505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166321e5383a33346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610659929190612174565b600060405180830381600087803b151561067257600080fd5b6102c65a03f1151561068357600080fd5b5050503373ffffffffffffffffffffffffffffffffffffffff167fe3df84c3ca6a90f0e6485beae08e7bd034695356bec32910a3d62559ff33fbc860405160405180910390a25050505050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632452b472846000604051604001526040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161075391906120f8565b6040805180830381600087803b151561076b57600080fd5b6102c65a03f1151561077c57600080fd5b5050506040518051906020018051905091509150915091565b61079e3361104c565b15156107a657fe5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d26a99b336040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161081d91906120f8565b600060405180830381600087803b151561083657600080fd5b6102c65a03f1151561084757600080fd5b5050503373ffffffffffffffffffffffffffffffffffffffff167fb1e40dcb43d26b3a6cb20da12c333af5a0de0bcd6264eddca5fbacf3e31d4f9460405160405180910390a2565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a1cbad7e336040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161092c91906120f8565b600060405180830381600087803b151561094557600080fd5b6102c65a03f1151561095657600080fd5b5050503373ffffffffffffffffffffffffffffffffffffffff167fb1e40dcb43d26b3a6cb20da12c333af5a0de0bcd6264eddca5fbacf3e31d4f9460405160405180910390a2565b6000806000806000806000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166391976dcc8b600060405160a001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610a2c91906120f8565b60a060405180830381600087803b1515610a4557600080fd5b6102c65a03f11515610a5657600080fd5b50505060405180519060200180519060200180519060200180519060200180519050809950819a50829b50839c50849d505050505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166345cab4eb8b6000604051606001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610b0c91906120f8565b606060405180830381600087803b1515610b2557600080fd5b6102c65a03f11515610b3657600080fd5b50505060405180519060200180519060200180519050809450819550829650505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359b17b438b6000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610bd891906120f8565b602060405180830381600087803b1515610bf157600080fd5b6102c65a03f11515610c0257600080fd5b5050506040518051905090508888888888888888889850985098509850985098509850985098509193959799909294969850565b600060011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303e69146336000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610cbc91906120f8565b602060405180830381600087803b1515610cd557600080fd5b6102c65a03f11515610ce657600080fd5b50505060405180519050151514151515610cff57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359b17b43336000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d7f91906120f8565b602060405180830381600087803b1515610d9857600080fd5b6102c65a03f11515610da957600080fd5b505050604051805190509050600254610dcb3483611dcb90919063ffffffff16565b11151515610dd857600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663236cc4d7338c8c8c8c6040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e5795949392919061219d565b600060405180830381600087803b1515610e7057600080fd5b6102c65a03f11515610e8157600080fd5b505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663403bfbad3388888888886040518763ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f0596959493929190612113565b600060405180830381600087803b1515610f1e57600080fd5b6102c65a03f11515610f2f57600080fd5b505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166321e5383a33346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610fab929190612174565b600060405180830381600087803b1515610fc457600080fd5b6102c65a03f11515610fd557600080fd5b5050503373ffffffffffffffffffffffffffffffffffffffff167fdc94eebf39359cb097be68bd4890a58fce65c66d2d284d4349f666013dc8a43d60405160405180910390a250505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303e69146836000604051602001526040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110ce91906120f8565b602060405180830381600087803b15156110e757600080fd5b6102c65a03f115156110f857600080fd5b505050604051805190509050919050565b60025481565b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303e69146336000604051602001526040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161119391906120f8565b602060405180830381600087803b15156111ac57600080fd5b6102c65a03f115156111bd57600080fd5b5050506040518051905015151415156111d557600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166321e5383a33346040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161124e929190612174565b600060405180830381600087803b151561126757600080fd5b6102c65a03f1151561127857600080fd5b5050503373ffffffffffffffffffffffffffffffffffffffff167fe3df84c3ca6a90f0e6485beae08e7bd034695356bec32910a3d62559ff33fbc860405160405180910390a2565b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303e69146336000604051602001526040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161134491906120f8565b602060405180830381600087803b151561135d57600080fd5b6102c65a03f1151561136e57600080fd5b50505060405180519050151514151561138657600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663236cc4d733868686866040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161140595949392919061219d565b600060405180830381600087803b151561141e57600080fd5b6102c65a03f1151561142f57600080fd5b5050503373ffffffffffffffffffffffffffffffffffffffff167fe3df84c3ca6a90f0e6485beae08e7bd034695356bec32910a3d62559ff33fbc860405160405180910390a250505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fac8a800836000604051602001526040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016114fd91906120f8565b602060405180830381600087803b151561151657600080fd5b6102c65a03f1151561152757600080fd5b505050604051805190509050809050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359b17b43836000604051602001526040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016115bd91906120f8565b602060405180830381600087803b15156115d657600080fd5b6102c65a03f115156115e757600080fd5b505050604051805190509050919050565b6001600060146101000a81548160ff021916908315150217905550565b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303e69146336000604051602001526040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161169991906120f8565b602060405180830381600087803b15156116b257600080fd5b6102c65a03f115156116c357600080fd5b5050506040518051905015151415156116db57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663236cc4d733868686866040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161175a95949392919061219d565b600060405180830381600087803b151561177357600080fd5b6102c65a03f1151561178457600080fd5b505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166321e5383a33346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611800929190612174565b600060405180830381600087803b151561181957600080fd5b6102c65a03f1151561182a57600080fd5b5050503373ffffffffffffffffffffffffffffffffffffffff167fe3df84c3ca6a90f0e6485beae08e7bd034695356bec32910a3d62559ff33fbc860405160405180910390a250505050565b600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663375160bf866000604051608001526040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118fc91906120f8565b608060405180830381600087803b151561191557600080fd5b6102c65a03f1151561192657600080fd5b5050506040518051906020018051906020018051906020018051905093509350935093509193509193565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119ac57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156119e857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303e69146336000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b2a91906120f8565b602060405180830381600087803b1515611b4357600080fd5b6102c65a03f11515611b5457600080fd5b505050604051805190501515141515611b6c57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663403bfbad3387878787876040518763ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611bed96959493929190612113565b600060405180830381600087803b1515611c0657600080fd5b6102c65a03f11515611c1757600080fd5b5050503373ffffffffffffffffffffffffffffffffffffffff167fe3df84c3ca6a90f0e6485beae08e7bd034695356bec32910a3d62559ff33fbc860405160405180910390a25050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611cbf57600080fd5b8060028190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611d2457600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611d9b91906120f8565b600060405180830381600087803b1515611db457600080fd5b6102c65a03f11515611dc557600080fd5b50505050565b6000808284019050838110151515611ddf57fe5b8091505092915050565b6000611df582356123a3565b905092915050565b6000611e0982356123c3565b905092915050565b6000611e1d82356123cd565b905092915050565b6000611e3182356123da565b905092915050565b6000611e4582356123e7565b905092915050565b6000611e5982356123f4565b905092915050565b600060208284031260018114611e7657611e7b565b600080fd5b506000611e8a84828501611de9565b91505092915050565b600080600080600060a08688031260018114611eae57611eb3565b600080fd5b506000611ec288828901611e39565b9550506020611ed388828901611e39565b9450506040611ee488828901611dfd565b9350506060611ef588828901611dfd565b9250506080611f0688828901611e11565b9150509295509295909350565b600060208284031260018114611f2857611f2d565b600080fd5b506000611f3c84828501611e4d565b91505092915050565b60008060008060808587031260018114611f5e57611f63565b600080fd5b506000611f7287828801611e4d565b9450506020611f8387828801611e4d565b9350506040611f9487828801611dfd565b9250506060611fa587828801611e25565b91505092959194509250565b60008060008060008060008060006101208a8c031260018114611fd357611fd8565b600080fd5b506000611fe78c828d01611e4d565b9950506020611ff88c828d01611e4d565b98505060406120098c828d01611dfd565b975050606061201a8c828d01611e25565b965050608061202b8c828d01611e39565b95505060a061203c8c828d01611e39565b94505060c061204d8c828d01611dfd565b93505060e061205e8c828d01611dfd565b9250506101006120708c828d01611e11565b9150509295985092959850929598565b6120898161233c565b82525050565b6120988161235c565b82525050565b6120a781612368565b82525050565b6120b6816123fe565b82525050565b6120c581612372565b82525050565b6120d48161237f565b82525050565b6120e38161238c565b82525050565b6120f281612399565b82525050565b600060208201905061210d6000830184612080565b92915050565b600060c0820190506121286000830189612080565b61213560208301886120da565b61214260408301876120da565b61214f606083018661209e565b61215c608083018561209e565b61216960a08301846120bc565b979650505050505050565b60006040820190506121896000830185612080565b61219660208301846120e9565b9392505050565b600060a0820190506121b26000830188612080565b6121bf60208301876120e9565b6121cc60408301866120e9565b6121d9606083018561209e565b6121e660808301846120cb565b9695505050505050565b6000602082019050612205600083018461208f565b92915050565b600060208201905061222060008301846120ad565b92915050565b60006101208201905061223c600083018c6120da565b612249602083018b6120da565b612256604083018a61209e565b612263606083018961209e565b61227060808301886120bc565b61227d60a08301876120e9565b61228a60c08301866120e9565b61229760e08301856120e9565b6122a56101008301846120e9565b9a9950505050505050505050565b60006020820190506122c860008301846120e9565b92915050565b60006040820190506122e360008301856120e9565b6122f0602083018461208f565b9392505050565b600060808201905061230c60008301876120e9565b61231960208301866120e9565b612326604083018561209e565b61233360608301846120cb565b95945050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b60008160010b9050919050565b60008160030b9050919050565b60008160000b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60008160010b9050919050565b60008160030b9050919050565b60008160000b9050919050565b6000819050919050565b60006124098261233c565b90509190505600a265627a7a723058207cbacbe044d474482e7b5c3cc47bffda10a51e95861d9cd939c354dac43002036c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x606060405260043610610128576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806307003bb41461012d578063146c2044146101565780632452b4721461016d578063418596da146101a457806343cb265e146101b957806343f3db45146101e25780634d9054d4146101f7578063699eaa3b146102355780638da5cb5b1461024c5780639d94558a14610275578063a4d66daf146102ab578063b163cc38146102d4578063b384aa4c146102de578063c3c5a54714610300578063cb9fc26b14610336578063d94b9b371461036c578063ef8b617614610381578063f07afb9e14610398578063f2fde38b146103d1578063fa6ac10f146103f3578063fae0959a14610415578063fe10fa3114610437575b600080fd5b341561013857600080fd5b610140610459565b60405161014d91906121f0565b60405180910390f35b61016b6004610166903690611e93565b61046c565b005b341561017857600080fd5b61018d6004610188903690611e61565b6106d0565b60405161019b9291906122ce565b60405180910390f35b34156101af57600080fd5b6101b7610795565b005b34156101c457600080fd5b6101cc61088f565b6040516101d9919061220b565b60405180910390f35b34156101ed57600080fd5b6101f56108b5565b005b341561020257600080fd5b6102176004610212903690611e61565b61099e565b60405161022c99989796959493929190612226565b60405180910390f35b61024a6004610245903690611fb1565b610c36565b005b341561025757600080fd5b61025f611027565b60405161026c91906120f8565b60405180910390f35b341561028057600080fd5b6102956004610290903690611e61565b61104c565b6040516102a291906121f0565b60405180910390f35b34156102b657600080fd5b6102be611109565b6040516102cb91906122b3565b60405180910390f35b6102dc61110f565b005b34156102e957600080fd5b6102fe60046102f9903690611f45565b6112c0565b005b341561030b57600080fd5b610320600461031b903690611e61565b61147b565b60405161032d91906121f0565b60405180910390f35b341561034157600080fd5b6103566004610351903690611e61565b61153b565b60405161036391906122b3565b60405180910390f35b341561037757600080fd5b61037f6115f8565b005b6103966004610391903690611f45565b611615565b005b34156103a357600080fd5b6103b860046103b3903690611e61565b611876565b6040516103c894939291906122f7565b60405180910390f35b34156103dc57600080fd5b6103f160046103ec903690611e61565b611951565b005b34156103fe57600080fd5b610413600461040e903690611e93565b611aa6565b005b341561042057600080fd5b6104356004610430903690611f13565b611c64565b005b341561044257600080fd5b6104576004610452903690611e61565b611cc9565b005b600060149054906101000a900460ff1681565b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303e69146336000604051602001526040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016104f091906120f8565b602060405180830381600087803b151561050957600080fd5b6102c65a03f1151561051a57600080fd5b50505060405180519050151514151561053257600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663403bfbad3387878787876040518763ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016105b396959493929190612113565b600060405180830381600087803b15156105cc57600080fd5b6102c65a03f115156105dd57600080fd5b505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166321e5383a33346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610659929190612174565b600060405180830381600087803b151561067257600080fd5b6102c65a03f1151561068357600080fd5b5050503373ffffffffffffffffffffffffffffffffffffffff167fe3df84c3ca6a90f0e6485beae08e7bd034695356bec32910a3d62559ff33fbc860405160405180910390a25050505050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632452b472846000604051604001526040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161075391906120f8565b6040805180830381600087803b151561076b57600080fd5b6102c65a03f1151561077c57600080fd5b5050506040518051906020018051905091509150915091565b61079e3361104c565b15156107a657fe5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631d26a99b336040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161081d91906120f8565b600060405180830381600087803b151561083657600080fd5b6102c65a03f1151561084757600080fd5b5050503373ffffffffffffffffffffffffffffffffffffffff167fb1e40dcb43d26b3a6cb20da12c333af5a0de0bcd6264eddca5fbacf3e31d4f9460405160405180910390a2565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a1cbad7e336040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161092c91906120f8565b600060405180830381600087803b151561094557600080fd5b6102c65a03f1151561095657600080fd5b5050503373ffffffffffffffffffffffffffffffffffffffff167fb1e40dcb43d26b3a6cb20da12c333af5a0de0bcd6264eddca5fbacf3e31d4f9460405160405180910390a2565b6000806000806000806000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166391976dcc8b600060405160a001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610a2c91906120f8565b60a060405180830381600087803b1515610a4557600080fd5b6102c65a03f11515610a5657600080fd5b50505060405180519060200180519060200180519060200180519060200180519050809950819a50829b50839c50849d505050505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166345cab4eb8b6000604051606001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610b0c91906120f8565b606060405180830381600087803b1515610b2557600080fd5b6102c65a03f11515610b3657600080fd5b50505060405180519060200180519060200180519050809450819550829650505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359b17b438b6000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610bd891906120f8565b602060405180830381600087803b1515610bf157600080fd5b6102c65a03f11515610c0257600080fd5b5050506040518051905090508888888888888888889850985098509850985098509850985098509193959799909294969850565b600060011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303e69146336000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610cbc91906120f8565b602060405180830381600087803b1515610cd557600080fd5b6102c65a03f11515610ce657600080fd5b50505060405180519050151514151515610cff57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359b17b43336000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d7f91906120f8565b602060405180830381600087803b1515610d9857600080fd5b6102c65a03f11515610da957600080fd5b505050604051805190509050600254610dcb3483611dcb90919063ffffffff16565b11151515610dd857600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663236cc4d7338c8c8c8c6040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e5795949392919061219d565b600060405180830381600087803b1515610e7057600080fd5b6102c65a03f11515610e8157600080fd5b505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663403bfbad3388888888886040518763ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f0596959493929190612113565b600060405180830381600087803b1515610f1e57600080fd5b6102c65a03f11515610f2f57600080fd5b505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166321e5383a33346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610fab929190612174565b600060405180830381600087803b1515610fc457600080fd5b6102c65a03f11515610fd557600080fd5b5050503373ffffffffffffffffffffffffffffffffffffffff167fdc94eebf39359cb097be68bd4890a58fce65c66d2d284d4349f666013dc8a43d60405160405180910390a250505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303e69146836000604051602001526040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110ce91906120f8565b602060405180830381600087803b15156110e757600080fd5b6102c65a03f115156110f857600080fd5b505050604051805190509050919050565b60025481565b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303e69146336000604051602001526040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161119391906120f8565b602060405180830381600087803b15156111ac57600080fd5b6102c65a03f115156111bd57600080fd5b5050506040518051905015151415156111d557600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166321e5383a33346040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161124e929190612174565b600060405180830381600087803b151561126757600080fd5b6102c65a03f1151561127857600080fd5b5050503373ffffffffffffffffffffffffffffffffffffffff167fe3df84c3ca6a90f0e6485beae08e7bd034695356bec32910a3d62559ff33fbc860405160405180910390a2565b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303e69146336000604051602001526040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161134491906120f8565b602060405180830381600087803b151561135d57600080fd5b6102c65a03f1151561136e57600080fd5b50505060405180519050151514151561138657600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663236cc4d733868686866040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161140595949392919061219d565b600060405180830381600087803b151561141e57600080fd5b6102c65a03f1151561142f57600080fd5b5050503373ffffffffffffffffffffffffffffffffffffffff167fe3df84c3ca6a90f0e6485beae08e7bd034695356bec32910a3d62559ff33fbc860405160405180910390a250505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fac8a800836000604051602001526040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016114fd91906120f8565b602060405180830381600087803b151561151657600080fd5b6102c65a03f1151561152757600080fd5b505050604051805190509050809050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359b17b43836000604051602001526040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016115bd91906120f8565b602060405180830381600087803b15156115d657600080fd5b6102c65a03f115156115e757600080fd5b505050604051805190509050919050565b6001600060146101000a81548160ff021916908315150217905550565b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303e69146336000604051602001526040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161169991906120f8565b602060405180830381600087803b15156116b257600080fd5b6102c65a03f115156116c357600080fd5b5050506040518051905015151415156116db57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663236cc4d733868686866040518663ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161175a95949392919061219d565b600060405180830381600087803b151561177357600080fd5b6102c65a03f1151561178457600080fd5b505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166321e5383a33346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611800929190612174565b600060405180830381600087803b151561181957600080fd5b6102c65a03f1151561182a57600080fd5b5050503373ffffffffffffffffffffffffffffffffffffffff167fe3df84c3ca6a90f0e6485beae08e7bd034695356bec32910a3d62559ff33fbc860405160405180910390a250505050565b600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663375160bf866000604051608001526040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118fc91906120f8565b608060405180830381600087803b151561191557600080fd5b6102c65a03f1151561192657600080fd5b5050506040518051906020018051906020018051906020018051905093509350935093509193509193565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119ac57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156119e857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60011515600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166303e69146336000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b2a91906120f8565b602060405180830381600087803b1515611b4357600080fd5b6102c65a03f11515611b5457600080fd5b505050604051805190501515141515611b6c57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663403bfbad3387878787876040518763ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611bed96959493929190612113565b600060405180830381600087803b1515611c0657600080fd5b6102c65a03f11515611c1757600080fd5b5050503373ffffffffffffffffffffffffffffffffffffffff167fe3df84c3ca6a90f0e6485beae08e7bd034695356bec32910a3d62559ff33fbc860405160405180910390a25050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611cbf57600080fd5b8060028190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611d2457600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611d9b91906120f8565b600060405180830381600087803b1515611db457600080fd5b6102c65a03f11515611dc557600080fd5b50505050565b6000808284019050838110151515611ddf57fe5b8091505092915050565b6000611df582356123a3565b905092915050565b6000611e0982356123c3565b905092915050565b6000611e1d82356123cd565b905092915050565b6000611e3182356123da565b905092915050565b6000611e4582356123e7565b905092915050565b6000611e5982356123f4565b905092915050565b600060208284031260018114611e7657611e7b565b600080fd5b506000611e8a84828501611de9565b91505092915050565b600080600080600060a08688031260018114611eae57611eb3565b600080fd5b506000611ec288828901611e39565b9550506020611ed388828901611e39565b9450506040611ee488828901611dfd565b9350506060611ef588828901611dfd565b9250506080611f0688828901611e11565b9150509295509295909350565b600060208284031260018114611f2857611f2d565b600080fd5b506000611f3c84828501611e4d565b91505092915050565b60008060008060808587031260018114611f5e57611f63565b600080fd5b506000611f7287828801611e4d565b9450506020611f8387828801611e4d565b9350506040611f9487828801611dfd565b9250506060611fa587828801611e25565b91505092959194509250565b60008060008060008060008060006101208a8c031260018114611fd357611fd8565b600080fd5b506000611fe78c828d01611e4d565b9950506020611ff88c828d01611e4d565b98505060406120098c828d01611dfd565b975050606061201a8c828d01611e25565b965050608061202b8c828d01611e39565b95505060a061203c8c828d01611e39565b94505060c061204d8c828d01611dfd565b93505060e061205e8c828d01611dfd565b9250506101006120708c828d01611e11565b9150509295985092959850929598565b6120898161233c565b82525050565b6120988161235c565b82525050565b6120a781612368565b82525050565b6120b6816123fe565b82525050565b6120c581612372565b82525050565b6120d48161237f565b82525050565b6120e38161238c565b82525050565b6120f281612399565b82525050565b600060208201905061210d6000830184612080565b92915050565b600060c0820190506121286000830189612080565b61213560208301886120da565b61214260408301876120da565b61214f606083018661209e565b61215c608083018561209e565b61216960a08301846120bc565b979650505050505050565b60006040820190506121896000830185612080565b61219660208301846120e9565b9392505050565b600060a0820190506121b26000830188612080565b6121bf60208301876120e9565b6121cc60408301866120e9565b6121d9606083018561209e565b6121e660808301846120cb565b9695505050505050565b6000602082019050612205600083018461208f565b92915050565b600060208201905061222060008301846120ad565b92915050565b60006101208201905061223c600083018c6120da565b612249602083018b6120da565b612256604083018a61209e565b612263606083018961209e565b61227060808301886120bc565b61227d60a08301876120e9565b61228a60c08301866120e9565b61229760e08301856120e9565b6122a56101008301846120e9565b9a9950505050505050505050565b60006020820190506122c860008301846120e9565b92915050565b60006040820190506122e360008301856120e9565b6122f0602083018461208f565b9392505050565b600060808201905061230c60008301876120e9565b61231960208301866120e9565b612326604083018561209e565b61233360608301846120cb565b95945050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b60008160010b9050919050565b60008160030b9050919050565b60008160000b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60008160010b9050919050565b60008160030b9050919050565b60008160000b9050919050565b6000819050919050565b60006124098261233c565b90509190505600a265627a7a723058207cbacbe044d474482e7b5c3cc47bffda10a51e95861d9cd939c354dac43002036c6578706572696d656e74616cf50037",
  "sourceMap": "282:7007:1:-;;;443:7;423:27;;926:184;;;;;;;;;;;;;;;;;;;;;;;;;;502:10:5;494:5;;:18;;;;;;;;;;;;;;;;;;1031:21:1;995:13;;:58;;;;;;;;;;;;;;;;;;1073:4;1059:11;;:18;;;;;;;;;;;;;;;;;;926:184;282:7007;;5:122:-1;;83:39;114:6;108:5;83:39;;;74:48;;68:59;;;;;134:274;;253:2;241:9;232:7;228:3;224;262:1;257:23;;;;217:63;;257:23;276:1;273;266:6;217:63;;311:1;328:64;384:7;375:6;364:9;360:3;328:64;;;318:74;;290:108;211:197;;;;;415:128;;495:42;488:5;484:3;473:65;;467:76;;;;282:7007:1;;;;;;;",
  "deployedSourceMap": "282:7007:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;352:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;2626:470;;;;;;;;;;;;;;6031:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2012:239;;;;;;;;;;;;;;379:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;4197:165;;;;;;;;;;;;;;5396:631;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1257:751;;;;;;;;;;;;;;238:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;6181:117:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;423:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;3843:204;;;;;;3102:322;;;;;;;;;;;;;;;;;;;;;;4051:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7157:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;866:56;;;;;;;;;;;;;;3430:407;;;;;;;;;;;;;;5090:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;827:169:5;;;;;;;;;;;;;;;;;;;;;;2255:365:1;;;;;;;;;;;;;;;;;;;;;;1113:81;;;;;;;;;;;;;;;;;;;;;;4967:119;;;;;;;;;;;;;;;;;;;;;;352:23;;;;;;;;;;;;;:::o;2626:470::-;2861:4;2823:42;;:13;;;;;;;;;;;:22;;;2846:10;2823:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;2815:51;;;;;;;;2876:13;;;;;;;;;;;:30;;;2907:10;2919:9;2930:11;2943:14;2958:15;2975:6;2876:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2992:13;;;;;;;;;;;:24;;;3017:10;3029:9;2992:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3076:10;3063:24;;;;;;;;;;;;2626:470;;;;;:::o;6031:146::-;6094:12;6108:11;6134:13;;;;;;;;;;;:29;;;6164:7;6134:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6127:45;;;;6031:146;;;:::o;2012:239::-;2104:26;2119:10;2104:14;:26::i;:::-;2097:34;;;;;;2137:13;;;;;;;;;;;:25;;;2163:10;2137:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2235:10;2222:24;;;;;;;;;;;;2012:239::o;379:40::-;;;;;;;;;;;;;:::o;4197:165::-;4273:13;;;;;;;;;;;:26;;;4300:10;4273:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4330:10;4317:24;;;;;;;;;;;;4197:165::o;5396:631::-;5465:13;5484:15;5505:21;5532:22;5560:10;5576:15;5597:14;5617:12;5635;5724:13;;;;;;;;;;;:33;;;5758:7;5724:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5662:104;;;;;;;;;;;;;;;;;;;;5807:13;;;;;;;;;;;:36;;;5844:7;5807:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5774:78;;;;;;;;;;;;5870:13;;;;;;;;;;;:30;;;5901:7;5870:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5860:49;;5925:8;5935:10;5947:13;5962:14;5978:4;5984:10;5995:9;6005:7;6014;5917:105;;;;;;;;;;;;;;;;;;5396:631;;;;;;;;;;;:::o;1257:751::-;1592:8;1579:4;1541:42;;:13;;;;;;;;;;;:22;;;1564:10;1541:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;;1533:51;;;;;;;;1603:13;;;;;;;;;;;:30;;;1634:10;1603:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1592:53;;1683:5;;1661:18;1669:9;1661:3;:7;;:18;;;;:::i;:::-;:27;;1653:36;;;;;;;;1697:13;;;;;;;;;;;:31;;;1729:10;1741:4;1747;1753:12;1767:11;1697:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1787:13;;;;;;;;;;;:30;;;1818:10;1830:9;1841:11;1854:17;1872:18;1892:6;1787:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1907:13;;;;;;;;;;;:24;;;1932:10;1944:9;1907:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1992:10;1977:26;;;;;;;;;;;;1257:751;;;;;;;;;;:::o;238:20:5:-;;;;;;;;;;;;;:::o;6181:117:1:-;6243:4;6262:13;;;;;;;;;;;:22;;;6285:7;6262:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6255:38;;6181:117;;;:::o;423:27::-;;;;:::o;3843:204::-;3934:4;3896:42;;:13;;;;;;;;;;;:22;;;3919:10;3896:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;3888:51;;;;;;;;3947:13;;;;;;;;;;;:24;;;3972:10;3984:9;3947:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4029:10;4016:24;;;;;;;;;;;;3843:204::o;3102:322::-;3284:4;3246:42;;:13;;;;;;;;;;;:22;;;3269:10;3246:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;3238:51;;;;;;;;3299:13;;;;;;;;;;;:31;;;3331:10;3343:4;3349;3355:12;3369:11;3299:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3404:10;3391:24;;;;;;;;;;;;3102:322;;;;:::o;4051:142::-;4111:11;4138:13;;;;;;;;;;;:22;;;4161:7;4138:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4129:40;;4182:6;4175:13;;4051:142;;;:::o;7157:130::-;7223:4;7242:13;;;;;;;;;;;:30;;;7273:8;7242:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7235:47;;7157:130;;;:::o;866:56::-;913:4;899:11;;:18;;;;;;;;;;;;;;;;;;866:56::o;3430:407::-;3626:4;3588:42;;:13;;;;;;;;;;;:22;;;3611:10;3588:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;3580:51;;;;;;;;3641:13;;;;;;;;;;;:31;;;3673:10;3685:4;3691;3697:12;3711:11;3641:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3733:13;;;;;;;;;;;:24;;;3758:10;3770:9;3733:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3817:10;3804:24;;;;;;;;;;;;3430:407;;;;:::o;5090:179::-;5150:9;5161;5172:18;5192:16;5223:13;;;;;;;;;;;:34;;;5258:7;5223:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5216:50;;;;;;;;5090:179;;;;;:::o;827:169:5:-;647:5;;;;;;;;;;;633:19;;:10;:19;;;625:28;;;;;;;;923:1;903:22;;:8;:22;;;;895:31;;;;;;;;960:8;932:37;;953:5;;;;;;;;;;;932:37;;;;;;;;;;;;983:8;975:5;;:16;;;;;;;;;;;;;;;;;;827:169;:::o;2255:365:1:-;2462:4;2424:42;;:13;;;;;;;;;;;:22;;;2447:10;2424:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;2416:51;;;;;;;;2475:13;;;;;;;;;;;:30;;;2506:10;2518:9;2529:11;2542:14;2557:15;2574:6;2475:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2602:10;2589:24;;;;;;;;;;;;2255:365;;;;;:::o;1113:81::-;647:5:5;;;;;;;;;;;633:19;;:10;:19;;;625:28;;;;;;;;1181:8:1;1173:5;:16;;;;1113:81;:::o;4967:119::-;647:5:5;;;;;;;;;;;633:19;;:10;:19;;;625:28;;;;;;;;5040:13:1;;;;;;;;;;;:31;;;5072:8;5040:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4967:119;:::o;680:133:4:-;742:7;757:9;773:1;769;:5;757:17;;792:1;787;:6;;780:14;;;;;;807:1;800:8;;680:133;;;;;:::o;5:118:-1:-;;72:46;110:6;97:12;72:46;;;63:55;;57:66;;;;;130:118;;197:46;235:6;222:12;197:46;;;188:55;;182:66;;;;;255:114;;320:44;356:6;343:12;320:44;;;311:53;;305:64;;;;;376:114;;441:44;477:6;464:12;441:44;;;432:53;;426:64;;;;;497:112;;561:43;596:6;583:12;561:43;;;552:52;;546:63;;;;;616:118;;683:46;721:6;708:12;683:46;;;674:55;;668:66;;;;;741:252;;849:2;837:9;828:7;824:3;820;858:1;853:23;;;;813:63;;853:23;872:1;869;862:6;813:63;;907:1;924:53;969:7;960:6;949:9;945:3;924:53;;;914:63;;886:97;807:186;;;;;1000:738;;;;;;1168:3;1156:9;1147:7;1143:3;1139;1178:1;1173:23;;;;1132:64;;1173:23;1192:1;1189;1182:6;1132:64;;1227:1;1244:50;1286:7;1277:6;1266:9;1262:3;1244:50;;;1234:60;;1206:94;1331:2;1349:50;1391:7;1382:6;1371:9;1367:3;1349:50;;;1339:60;;1310:95;1436:2;1454:53;1499:7;1490:6;1479:9;1475:3;1454:53;;;1444:63;;1415:98;1544:2;1562:53;1607:7;1598:6;1587:9;1583:3;1562:53;;;1552:63;;1523:98;1652:3;1671:51;1714:7;1705:6;1694:9;1690:3;1671:51;;;1661:61;;1631:97;1126:612;;;;;;;;;1745:252;;1853:2;1841:9;1832:7;1828:3;1824;1862:1;1857:23;;;;1817:63;;1857:23;1876:1;1873;1866:6;1817:63;;1911:1;1928:53;1973:7;1964:6;1953:9;1949:3;1928:53;;;1918:63;;1890:97;1811:186;;;;;2004:624;;;;;2161:3;2149:9;2140:7;2136:3;2132;2171:1;2166:23;;;;2125:64;;2166:23;2185:1;2182;2175:6;2125:64;;2220:1;2237:53;2282:7;2273:6;2262:9;2258:3;2237:53;;;2227:63;;2199:97;2327:2;2345:53;2390:7;2381:6;2370:9;2366:3;2345:53;;;2335:63;;2306:98;2435:2;2453:53;2498:7;2489:6;2478:9;2474:3;2453:53;;;2443:63;;2414:98;2543:2;2561:51;2604:7;2595:6;2584:9;2580:3;2561:51;;;2551:61;;2522:96;2119:509;;;;;;;;2635:1238;;;;;;;;;;2869:3;2857:9;2848:7;2844:3;2840;2879:1;2874:23;;;;2833:64;;2874:23;2893:1;2890;2883:6;2833:64;;2928:1;2945:53;2990:7;2981:6;2970:9;2966:3;2945:53;;;2935:63;;2907:97;3035:2;3053:53;3098:7;3089:6;3078:9;3074:3;3053:53;;;3043:63;;3014:98;3143:2;3161:53;3206:7;3197:6;3186:9;3182:3;3161:53;;;3151:63;;3122:98;3251:2;3269:51;3312:7;3303:6;3292:9;3288:3;3269:51;;;3259:61;;3230:96;3357:3;3376:50;3418:7;3409:6;3398:9;3394:3;3376:50;;;3366:60;;3336:96;3463:3;3482:50;3524:7;3515:6;3504:9;3500:3;3482:50;;;3472:60;;3442:96;3569:3;3588:53;3633:7;3624:6;3613:9;3609:3;3588:53;;;3578:63;;3548:99;3678:3;3697:53;3742:7;3733:6;3722:9;3718:3;3697:53;;;3687:63;;3657:99;3787:3;3806:51;3849:7;3840:6;3829:9;3825:3;3806:51;;;3796:61;;3766:97;2827:1046;;;;;;;;;;;;3880:110;3953:31;3978:5;3953:31;;;3948:3;3941:6;3935:55;;;3997:101;4064:28;4086:5;4064:28;;;4059:3;4052:6;4046:52;;;4105:110;4178:31;4203:5;4178:31;;;4173:3;4166:6;4160:55;;;4222:172;4323:65;4382:5;4323:65;;;4318:3;4311:6;4305:89;;;4401:104;4470:29;4493:5;4470:29;;;4465:3;4458:6;4452:53;;;4512:104;4581:29;4604:5;4581:29;;;4576:3;4569:6;4563:53;;;4623:101;4690:28;4712:5;4690:28;;;4685:3;4678:6;4672:52;;;4731:110;4804:31;4829:5;4804:31;;;4799:3;4792:6;4786:55;;;4848:193;;4956:2;4945:9;4941:3;4933:26;;4970:61;5028:1;5017:9;5013:3;5004:6;4970:61;;;4927:114;;;;;5048:669;;5280:3;5269:9;5265:3;5257:27;;5295:61;5353:1;5342:9;5338:3;5329:6;5295:61;;;5367:56;5419:2;5408:9;5404:3;5395:6;5367:56;;;5434;5486:2;5475:9;5471:3;5462:6;5434:56;;;5501:62;5559:2;5548:9;5544:3;5535:6;5501:62;;;5574:63;5632:3;5621:9;5617:3;5608:6;5574:63;;;5648:59;5702:3;5691:9;5687:3;5678:6;5648:59;;;5251:466;;;;;;;;;;5724:294;;5860:2;5849:9;5845:3;5837:26;;5874:61;5932:1;5921:9;5917:3;5908:6;5874:61;;;5946:62;6004:2;5993:9;5989:3;5980:6;5946:62;;;5831:187;;;;;;6025:591;;6241:3;6230:9;6226:3;6218:27;;6256:61;6314:1;6303:9;6299:3;6290:6;6256:61;;;6328:62;6386:2;6375:9;6371:3;6362:6;6328:62;;;6401;6459:2;6448:9;6444:3;6435:6;6401:62;;;6474;6532:2;6521:9;6517:3;6508:6;6474:62;;;6547:59;6601:3;6590:9;6586:3;6577:6;6547:59;;;6212:404;;;;;;;;;6623:181;;6725:2;6714:9;6710:3;6702:26;;6739:55;6791:1;6780:9;6776:3;6767:6;6739:55;;;6696:108;;;;;6811:249;;6947:2;6936:9;6932:3;6924:26;;6961:89;7047:1;7036:9;7032:3;7023:6;6961:89;;;6918:142;;;;;7067:975;;7383:3;7372:9;7368:3;7360:27;;7398:55;7450:1;7439:9;7435:3;7426:6;7398:55;;;7464:56;7516:2;7505:9;7501:3;7492:6;7464:56;;;7531:62;7589:2;7578:9;7574:3;7565:6;7531:62;;;7604;7662:2;7651:9;7647:3;7638:6;7604:62;;;7677:59;7731:3;7720:9;7716:3;7707:6;7677:59;;;7747:63;7805:3;7794:9;7790:3;7781:6;7747:63;;;7821;7879:3;7868:9;7864:3;7855:6;7821:63;;;7895;7953:3;7942:9;7938:3;7929:6;7895:63;;;7969;8027:3;8016:9;8012:3;8003:6;7969:63;;;7354:688;;;;;;;;;;;;;8049:193;;8157:2;8146:9;8142:3;8134:26;;8171:61;8229:1;8218:9;8214:3;8205:6;8171:61;;;8128:114;;;;;8249:282;;8379:2;8368:9;8364:3;8356:26;;8393:61;8451:1;8440:9;8436:3;8427:6;8393:61;;;8465:56;8517:2;8506:9;8502:3;8493:6;8465:56;;;8350:181;;;;;;8538:489;;8726:3;8715:9;8711:3;8703:27;;8741:61;8799:1;8788:9;8784:3;8775:6;8741:61;;;8813:62;8871:2;8860:9;8856:3;8847:6;8813:62;;;8886;8944:2;8933:9;8929:3;8920:6;8886:62;;;8959:58;9013:2;9002:9;8998:3;8989:6;8959:58;;;8697:330;;;;;;;;9034:128;;9114:42;9107:5;9103:3;9092:65;;9086:76;;;;9169:92;;9249:5;9242:6;9235;9224:32;;9218:43;;;;9268:79;;9337:5;9326:16;;9320:27;;;;9354:92;;9435:5;9432:1;9421:10;9410:31;;9404:42;;;;9453:92;;9534:5;9531:1;9520:10;9509:31;;9503:42;;;;9552:91;;9632:5;9629:1;9618:10;9607:31;;9601:42;;;;9650:79;;9719:5;9708:16;;9702:27;;;;9736:128;;9816:42;9809:5;9805:3;9794:65;;9788:76;;;;9871:79;;9940:5;9929:16;;9923:27;;;;9957:92;;10038:5;10035:1;10024:10;10013:31;;10007:42;;;;10056:92;;10137:5;10134:1;10123:10;10112:31;;10106:42;;;;10155:91;;10235:5;10232:1;10221:10;10210:31;;10204:42;;;;10253:79;;10322:5;10311:16;;10305:27;;;;10339:143;;10446:31;10471:5;10446:31;;;10433:44;;10427:55;;;",
  "source": "pragma solidity ^0.4.19;\npragma experimental ABIEncoderV2;\n\nimport 'zeppelin-solidity/contracts/ownership/Ownable.sol';\nimport 'zeppelin-solidity/contracts/math/SafeMath.sol';\nimport './DetherTellerStorage.sol';\n\n// TODO\n// NEED DTH TO DEPOSIT AND TRADE\n// MINT LOYALTY WHEN TRADE\n\ncontract DetherInterface is Ownable {\n  using SafeMath for uint256;\n  bool public initialised;\n  DetherTellerStorage public tellerStorage;\n  uint public limit = 2 ether;\n\n  event RegisterTeller(address indexed tellerAddress);\n  event DeleteTeller(address indexed tellerAddress);\n  event UpdateTeller(address indexed tellerAddress);\n  event Send(address indexed _from, address indexed _to, uint amount);\n\n// modifier\n  modifier isLockedForInitialMigration() {\n    require(!initialised);\n    _;\n  }\n\n  modifier isNotLockedForInitialMigration() {\n    require(initialised);\n    _;\n  }\n\n  function setInit() public  {\n    initialised = true;\n  }\n\n  function DetherInterface(address _tellerStorageAddress) public {\n    tellerStorage = DetherTellerStorage(_tellerStorageAddress);\n    initialised = true;\n    // initialised = false;\n  }\n  function updateLimit(uint newLimit)  public onlyOwner {\n    limit = newLimit;\n  }\n\n  /// @notice Register a teller\n  /// @dev gasUsed: 299600\n  function registerTeller(\n    uint _lat,\n    uint _lng,\n    bytes32 _countryCode,\n    int32 _postalcode,\n    int8 _avatarId,\n    int8 _currencyId,\n    bytes32 _messagingAddress,\n    bytes32 _messagingAddress2,\n    int16 _rates\n    ) public payable  {\n      // Conditions\n      require(tellerStorage.isOnline(msg.sender) != true);\n      uint bal = tellerStorage.getTellerBalance(msg.sender);\n      require(bal.add(msg.value) <= limit);\n      tellerStorage.setTellerPosition(msg.sender, _lat, _lng, _countryCode, _postalcode);\n      tellerStorage.setTellerProfile(msg.sender, _avatarId, _currencyId, _messagingAddress,_messagingAddress2, _rates);\n      tellerStorage.addBalance(msg.sender, msg.value); // send money\n\n      RegisterTeller(msg.sender);\n  }\n\n  function switchTellerOffline() public {\n    // delete point on map and messagery\n    assert(isTellerOnline(msg.sender));\n    tellerStorage.turnOffline(msg.sender);\n    // withdraw fund\n    // unstack token\n    DeleteTeller(msg.sender);\n  }\n\n  function updateProfile(\n    int8 _avatarId,\n    int8 _currencyId,\n    bytes32 _messagingAddr,\n    bytes32 _messagingAddr2,\n    int16 _rates\n    ) public {\n      require(tellerStorage.isOnline(msg.sender) == true);\n      tellerStorage.setTellerProfile(msg.sender, _avatarId, _currencyId, _messagingAddr,_messagingAddr2, _rates);\n      UpdateTeller(msg.sender);\n    }\n\n    function updateProfilePayable(\n      int8 _avatarId,\n      int8 _currencyId,\n      bytes32 _messagingAddr,\n      bytes32 _messagingAddr2,\n      int16 _rates\n      ) public payable{\n        require(tellerStorage.isOnline(msg.sender) == true);\n        tellerStorage.setTellerProfile(msg.sender, _avatarId, _currencyId, _messagingAddr,_messagingAddr2, _rates);\n        tellerStorage.addBalance(msg.sender, msg.value); // send money\n        UpdateTeller(msg.sender);\n      }\n\n    function updatePosition(\n      uint _lat,\n      uint _lng,\n      bytes32 _countryCode,\n      int32 _postalcode\n      ) public {\n        require(tellerStorage.isOnline(msg.sender) == true);\n        tellerStorage.setTellerPosition(msg.sender, _lat, _lng, _countryCode, _postalcode);\n        UpdateTeller(msg.sender);\n      }\n\n    function updatePositionPayable(\n      uint _lat,\n      uint _lng,\n      bytes32 _countryCode,\n      int32 _postalcode\n      ) public payable{\n        require(tellerStorage.isOnline(msg.sender) == true);\n        tellerStorage.setTellerPosition(msg.sender, _lat, _lng, _countryCode, _postalcode);\n        tellerStorage.addBalance(msg.sender, msg.value); // send money\n        UpdateTeller(msg.sender);\n      }\n\n    function addBalance() public payable {\n      require(tellerStorage.isOnline(msg.sender) == true);\n      tellerStorage.addBalance(msg.sender, msg.value); // send money\n      UpdateTeller(msg.sender);\n    }\n\n  function isRegistered(address _teller) public view returns (bool status){\n    status = tellerStorage.isTeller(_teller);\n    return status;\n  }\n\n  function deleteMyProfile() {\n    // delete all info\n    // keep loyalty\n    tellerStorage.deleteTeller(msg.sender);\n    DeleteTeller(msg.sender);\n    // withdraw\n  }\n\n\n  /*function importTellers(\n    int256 _lat,\n    int256 _lng,\n    uint _zoneId,\n    int16 _rate,\n    int8 _avatarId,\n    int8 _currencyId,\n    bytes32 _messagingAddress,\n    bytes32 _name,\n    uint _balance\n    ) public onlyOwner isLockedForInitialMigration {\n    tellerStorage.setTellerIndex(msg.sender);\n    tellerStorage.setTellerZone(msg.sender, _zoneId);\n    tellerStorage.setTellerPosition(msg.sender, _lat, _lng, _zoneId);\n    tellerStorage.setTellerProfile(msg.sender, _avatarId, _currencyId, _messagingAddress, _name, _rate);\n    tellerStorage.setTellerBalance(msg.sender, _balance);\n  }*/\n\n  function changeStorageOwnership(address newOwner) public onlyOwner {\n    tellerStorage.transferOwnership(newOwner);\n  }\n\n  function getTellerPos(address _teller) public view returns (uint _lat, uint _lng, bytes32 _countryId, int32 postalCode) {\n    return tellerStorage.getTellerPositionRaw(_teller);\n}\n\n  /*function getTeller(address _teller) public view returns (Teller) {\n    return tellerStorage.getTeller(_teller);\n  }*/\n\n  function getTellerProfile(address _teller) public view returns (\n    int8 avatarId,\n    int8 currencyId,\n    bytes32 messagingAddr,\n    bytes32 messagingAddr2,\n    int16 rate,\n    uint volumeSell,\n    uint volumeBuy,\n    uint nbTrade,\n    uint balance\n    ) {\n      (avatarId, currencyId, messagingAddr, messagingAddr2, rate) = tellerStorage.getTellerProfileRaw(_teller);\n      (volumeSell,volumeBuy,nbTrade) = tellerStorage.getTellerReputationRaw(_teller);\n      balance = tellerStorage.getTellerBalance(_teller);\n      return (avatarId, currencyId, messagingAddr, messagingAddr2, rate, volumeSell,volumeBuy,nbTrade, balance);\n  }\n\n  function getTellerStatus(address _teller) public view returns (uint balance, bool status) {\n    return tellerStorage.getTellerStatus(_teller);\n  }\n\n  function isTellerOnline(address _teller) public view returns (bool) {\n    return tellerStorage.isOnline(_teller);\n  }\n  /// @notice Sendcoin allow seller to send ether they put in escrow in the smart contract\n  /// @dev gasUsed: 96681\n  /*function sendCoin (address _receiver, uint _amount) public isNotLockedForInitialMigration returns (bool) {\n    require(_receiver != msg.sender);\n    uint tellerBalance = tellerStorage.getTellerBalance(msg.sender);\n    require(tellerBalance >= _amount);\n    tellerStorage.setTellerBalance(msg.sender, tellerBalance.sub(_amount));\n\n    var (nbTrade, volumeTrade) = tellerStorage.getTellerReputation(msg.sender);\n    tellerStorage.setTellerReputation(msg.sender, ++nbTrade, volumeTrade.add(_amount));\n\n    tellerStorage.releaseEth(_receiver, _amount);\n    var (lat, lng,) = tellerStorage.getTellerPosition(msg.sender);\n    Send(msg.sender, _receiver, _amount, lat, lng);\n    return true;\n  }*/\n\n\n\n  /// @notice Getter to retrieve balance\n  function getTellerBalances(address _address) public view returns (uint) {\n    return tellerStorage.getTellerBalance(_address);\n  }\n}\n",
  "sourcePath": "/Users/mehdi/code/dether/dethercontracts/contracts/DetherInterface.sol",
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {},
      "links": {},
      "address": "0x250f4a1d45776ce562fe6b044a2d65846770e448"
    }
  },
  "schemaVersion": "1.0.1",
  "updatedAt": "2018-01-04T18:27:20.865Z"
}